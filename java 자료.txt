자바란?
- JAVA는 네트워크상에서 쓸 수 있도록 미국의 선 마이크로 시스템즈가 개발한 객체 지향 프로그래밍 언어
스트림이란?
- 스트림은 자바8부터 추가된 컬렉션의 저장요소를 하나씩 참조해서 람다식으로 처리할수 있도록 해주는 반복자이다.

객체지향이란?
-데이터를 객체로 취급하여 프로그램에 반영한 것이며, 순차적으로 프로그램이 동작하는 기존의 것들과는 다르게 객체와 객체의 상호작용을 통해 프로그램이 동작하는것을 말한다.
객체지향 특성

자바 클래스란 무엇인가?
- 자바에서 모든 코드는 클래스 안에서 정의되며, 그 안에 변수와 메소드를 가집니다.

JAVA 데이터타입 Primitive type,Reference type
- Primitive type – 변수에 값 자체를 저장(정수형, 실수형, 문자형, 논리형) – Wrapper Class를 통해 객체로 변환 가능
- Reference type – 메모리상에 객체가 있는 위치를 저장

동기 프로그래밍과 비동기 프로그래밍을 설명하시오
-동기적 일처리 방식 : 순차적으로 일을 스스로 끝내 나가는 방식
-비동기적 일처리 방식 : 해야 할 일을 위임하고 기다리는 방식

String,StringBuilder,StringBuffer의 차이를 설명하세요.
-String: new 연산을 통해 생성된 String의 인스턴스의 메모리 공간은 절대 immutable(불변)하다. 
-StringBuffer, StringBuilder : new 연산으로 생성하고 연산이 필요할 때 크기를 변경시켜 문자열을 변경하므로 mutable(가변)이다. 

blocking이란?
-IO작업에서 주로 사용되는 메소드의 실행속도가 느려서 잠시 멈춰있는 상태를 말합니다.

오버로딩과 오버라이딩의 차이점을 알려주세요
-오버로딩은 메소드 이름은 같지만 매개변수를 다르게 정의하는 것을 말합니다.
-오버라이딩은 상위클래스(부모클래스)가 가지고 있는 메서드를 자식클래스에서 재정의하여 사용하는 것을 말합니다.

접근제어자(access modifier)에 대해 설명하시오.
-접근제어자는 객체지향 프로그래밍에서 클래스의 멤버 변수 또는 메소드에 설정하는 키워드로 접근 영역을 제한하는데 사용합니다. 
-public, default, protected, private이 존재합니다. 
-접근제어자를 사용하지 않았을 경우에는 기본적으로 default를 갖습니다. 
-public은 접근 제한을 하지 않음을 의미합니다. default는 같은 패키지 내에서만 접근이 가능함을 의미합니다. 
-protected는 같은 패키지 내 혹은 다른 패키지의 자식 클래스에서 접근이 가능함을 의미합니다. private는 같은 클래스 내에서만 접근이 가능함을 의미합니다.

자바에서 쓰레드를 구현하기 위한 2가지 방법을 간단하게 설명하시오.
-lang 패키지내에 구현되어있는 Thread 클래스를 상속받거나 Runnable 인터페이스를 상속받아 run 메소드를 재정의하여 구현합니다.

자바의 call-by-value, call-by-reference에 대해서 예를 들어 설명하시오.
-자바에서는 기본 자료형은 call-by-value, 참조 자료형은 call-by-reference에 의해 메소드의 인자 값을 전달합니다. 


JAVA EE와 SE의 차이점이 무엇인가요?
-Java SE란 Java Platform Standard Edition의 약자로 데스크톱, 서버, 임베디드를 위한 표준 자바 플랫폼을 말합니다.  
-안드로이드를 개발할 때 보통 Java SE로 개발을 합니다.
-Java EE란 Java Platform EnterPrise Edition의 약자로 자바를 이용한 서버측 개발을 위한 플랫폼입니다.
-SE에 서버측을 위한 기능을 추가하여 SE의 모든 기능을 이용 할 수 있습니다.

Static의 의미 
- 클래스가 로딩될 때, 메모리 공간을 할당하는데 처음 설정된 메모리 공간이 변하지 않음을 의미

플랫폼, 라이브러리, 프레임워크, API의 차이점은 무엇인가?
-플랫폼은 프로그램의 실행 환경이고, 라이브러리는 프로그램을 제작할 때 필요하거나 자주 사용하는기능을 모아놓은 것이며 프레임워크는 프로그램의 기본 구조(뼈대)로서 그 자체만으론 움직이지 않으나 필요한 기능을 한데 모아 구축해놓은 것이고 API는 라이브러리와 같이 함수의 집합이라고 말할 수있지만 더욱 포괄적으로 그 함수들에 대한 명세까지 포함하고 있다.


GET/POST 차이
- Get 방식 : 단순하게 서버 상에 존재하는 간단한 페이지를 요청하거나 게시판 글 목록 페이지에서 해당 페이지에 대한 목록 출력을 요청할 때 페이지 번호와 같이 간단한 파라미터를 전송하는 경우 사용된다.
- POST 방식 : 단순하게 특정한 페이지를 요청하는 것이 아니라 특정 페이지로 많은 야의 파라미터를 전송하여 파라미터에 관한 처리를 할 때 POST 방식으로 요청을 전송한다. 회원 가입 요청, 게시판 글쓰기 요청, 자료실 업로드 등을 처리할 때 사용하는 방식이 모두 POST 방식에 해당한다.

직렬화란?
- 직렬화(serialization)란 객체를 데이터 스트림으로 만드는 것을 뜻한다. 다시 얘기하면 객체에 저장된 데이터를 스트림에 쓰기(write)위해 연속적인(serial) 데이터로 변환하는 것을 말한다. 

역직렬화란?
- 역직렬화(Deserialization) 는 디스크에 저장되어있는 직렬화된 데이터를 읽거나 네트워크를 통해 전송된 바이트 스트림 형태의 데이터를 받아서 메모리상(Heap) 공간안에 할당하는것입니다.

Constructor에 대해 설명하시오.
- Constructor(생성자)는 OOP에서 쓰이는 객체 초기화 함수로서 객체의 생성 시에만 호출되어 메모리 생성과 동시에 객체의 데이터를 초기화하는 역할을 한다.

Reflection에 대해 설명하시오.
- Reflection(투영)은 구체적인 클래스 타입을 알지 못해도 해당 클래스의 메소드, 타입, 변수들에 접근할 수 있도록 해주는 Java API이다. Spring Container의 BeanFactory가 객체 인스턴스 생성 시 필요하다.